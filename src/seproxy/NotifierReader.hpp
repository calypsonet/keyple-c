// --------------------------------------------------------
// Code generated by Papyrus C++ - PTE fixed multi heritance
// --------------------------------------------------------

#ifndef KEYPLE_SEPROXY_NOTIFIERREADER_H
#define KEYPLE_SEPROXY_NOTIFIERREADER_H

/************************************************************
 NotifierReader class header
 ************************************************************/

//#include "keyple/seproxy/Pkg_seproxy.h"

#include "ObservableReader.h"
//#include "ReaderEvent.h"
#include "ProxyReader.h"

namespace keyple {
namespace seproxy {

/************************************************************/
/**
 * Abstract class “optionally” subclassable by the plugins of readers’ drivers
 */
class NotifierReader: public ProxyReader, public ObservableReader {
public:
	/**
	 * Constructor
	 */
	NotifierReader();

	/**
	 * Destructor
	 */
	~NotifierReader();

	/**
	 * 
	 * @param event 
	 */
	void notifyObservers(ReaderEvent* /*in*/event);

};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace seproxy
} // of namespace keyple

/************************************************************
 End of NotifierReader class header
 ************************************************************/

#endif
