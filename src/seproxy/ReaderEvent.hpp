// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef KEYPLE_SEPROXY_READEREVENT_H
#define KEYPLE_SEPROXY_READEREVENT_H

/************************************************************
 ReaderEvent class header
 ************************************************************/

//#include "keyple/seproxy/Pkg_seproxy.h"

#include "NotifierReader.hpp"

namespace keyple {
namespace seproxy {

/************************************************************/
/**
 * Class to notify an event of a specific ObservableReader / NotifierReader
 */
class ReaderEvent {
public:
	/**
 * \enum EventType
 * \brief Type of events raised by the reader .
 *
 * EventType defines the .
 */
	enum EventType {
		/**
		 * 
		 */
		IO_ERROR,
		/**
		 * 
		 */
		SE_INSERTED,
		/**
		 * 
		 */
		SE_REMOVAL
	};

	/**
	 * 
	 * @param reader 
	 * @param event 
	 */
	ReaderEvent(NotifierReader* /*in*/reader,
			EventType* /*in*/event);

	~ReaderEvent();

	/**
	 * 
	 * @return  
	 */
	NotifierReader* getReader();

	/**
	 * 
	 * @return  
	 */
	EventType* getEventType();

private:
	/**
	 * 
	 */
	NotifierReader* reader;
	/**
	 * 
	 */
	EventType event;
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace seproxy
} // of namespace keyple

/************************************************************
 End of ReaderEvent class header
 ************************************************************/

#endif
