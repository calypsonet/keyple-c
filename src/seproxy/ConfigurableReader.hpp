// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef KEYPLE_SEPROXY_CONFIGURABLEREADER_H
#define KEYPLE_SEPROXY_CONFIGURABLEREADER_H

/************************************************************
 ConfigurableReader class header
 ************************************************************/

//#include "keyple/seproxy/Pkg_seproxy.h"

#include <map>
#include <string>

#include "ProxyReader.h"
#include "ExecutionStatus.h"

namespace keyple {
namespace seproxy {

/************************************************************/
/**
 * Abstract class  “optionally”  extendable by the plugins of readers’ drivers.
 */
class ConfigurableReader: public ProxyReader {
public:

	virtual ~ConfigurableReader();

	/**
	 * 
	 * @return parameters/settings 
	 */
	virtual std::map<std::string, std::string>* getParameters() = 0;

	/**
	 * 
	 * @param key 
	 * @param value 
	 * @param response 
	 * @return the status of the execution of the command
	 *
	 * Manages:
	 * 		WrongParameterKeyError
	 * 		InconsistentParameterValueError
	 * 		ParameterProcessingErrorError
	 *
	 */
//NDE	virtual std::string setAParameter(std::string /*in*/key,
//NDE			std::string /*in*/value) = 0;

	virtual ExecutionStatus setAParameter(std::string /*in*/key,
			std::string /*in*/value, std::string* /*out*/response) = 0;
	/**
	 * Set proprietary settings for a plugin
	 * @param settings 
	 * @return the status of the execution of the command 
	 *
	 * 	 * Manages:
	 * 		WrongParameterKeyError
	 * 		InconsistentParameterValueError
	 * 		ParameterProcessingError
	 *
	 */
	//virtual void setParameters(std::map* /*in*/settings) = 0;
	virtual ExecutionStatus setParameters(std::map<std::string, std::string>* /*in*/settings) = 0;

};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace seproxy
} // of namespace keyple

/************************************************************
 End of ConfigurableReader class header
 ************************************************************/

#endif
